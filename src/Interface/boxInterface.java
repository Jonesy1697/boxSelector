package Interface;

import Libary.BoxLib;
import javax.swing.table.DefaultTableModel;
import Box.*;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;
//import javax.swing.*;

/**
 *
 * @author Chris
 */
public class boxInterface extends javax.swing.JFrame {

    double totalPrice = 0;
    int ID = 0;

    public boxInterface() {

        initComponents();

        DefaultTableModel model = (DefaultTableModel) this.tblOrders.getModel();
        model.setRowCount(0);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHeight = new javax.swing.JLabel();
        spnHeight = new javax.swing.JSpinner();
        lblLength = new javax.swing.JLabel();
        spnLength = new javax.swing.JSpinner();
        lblWidth = new javax.swing.JLabel();
        spnWidth = new javax.swing.JSpinner();
        chkSealTop = new javax.swing.JCheckBox();
        chkRefBot = new javax.swing.JCheckBox();
        chkRefCor = new javax.swing.JCheckBox();
        lblAmount = new javax.swing.JLabel();
        spnAmount = new javax.swing.JSpinner();
        btnOrder = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrders = new javax.swing.JTable();
        btnRemove1 = new javax.swing.JButton();
        btnRemoveAll = new javax.swing.JButton();
        lblGrade = new javax.swing.JLabel();
        spnGrade = new javax.swing.JSpinner();
        lblGrade1 = new javax.swing.JLabel();
        spnColor = new javax.swing.JSpinner();
        lblGrade2 = new javax.swing.JLabel();
        txtTotPrice = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        lblHeight.setText("Height (cm)");

        spnHeight.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        spnHeight.setMinimumSize(new java.awt.Dimension(50, 20));
        spnHeight.setPreferredSize(new java.awt.Dimension(100, 25));

        lblLength.setText("Length(cm)");

        spnLength.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        spnLength.setPreferredSize(new java.awt.Dimension(100, 25));

        lblWidth.setText("Width (cm)");

        spnWidth.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        spnWidth.setPreferredSize(new java.awt.Dimension(100, 25));

        chkSealTop.setText("Sealable top");
        chkSealTop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSealTopActionPerformed(evt);
            }
        });

        chkRefBot.setText("Reinforced bottom");
        chkRefBot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkRefBotActionPerformed(evt);
            }
        });

        chkRefCor.setText("Reinforced corners");
        chkRefCor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkRefCorActionPerformed(evt);
            }
        });

        lblAmount.setText("Amount");

        spnAmount.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        spnAmount.setPreferredSize(new java.awt.Dimension(50, 25));

        btnOrder.setText("Order");
        btnOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderActionPerformed(evt);
            }
        });

        tblOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Dimensions", "Sealable", "Reinforced Bottoms", "Reinforced Corners", "Amount", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblOrders);
        if (tblOrders.getColumnModel().getColumnCount() > 0) {
            tblOrders.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblOrders.getColumnModel().getColumn(0).setHeaderValue("ID");
            tblOrders.getColumnModel().getColumn(1).setPreferredWidth(125);
            tblOrders.getColumnModel().getColumn(1).setHeaderValue("Dimensions");
            tblOrders.getColumnModel().getColumn(2).setPreferredWidth(100);
            tblOrders.getColumnModel().getColumn(2).setHeaderValue("Sealable");
            tblOrders.getColumnModel().getColumn(3).setPreferredWidth(200);
            tblOrders.getColumnModel().getColumn(3).setHeaderValue("Reinforced Bottoms");
            tblOrders.getColumnModel().getColumn(4).setPreferredWidth(200);
            tblOrders.getColumnModel().getColumn(4).setHeaderValue("Reinforced Corners");
            tblOrders.getColumnModel().getColumn(5).setPreferredWidth(100);
            tblOrders.getColumnModel().getColumn(5).setHeaderValue("Amount");
        }

        btnRemove1.setText("Remove selected");
        btnRemove1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemove1ActionPerformed(evt);
            }
        });

        btnRemoveAll.setText("Remove all");
        btnRemoveAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveAllActionPerformed(evt);
            }
        });

        lblGrade.setText("Grade");

        spnGrade.setModel(new javax.swing.SpinnerNumberModel(1, 1, 5, 1));
        spnGrade.setPreferredSize(new java.awt.Dimension(50, 25));

        lblGrade1.setText("Colour");

        spnColor.setModel(new javax.swing.SpinnerNumberModel(0, 0, 2, 1));
        spnColor.setPreferredSize(new java.awt.Dimension(50, 25));
        spnColor.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnColorStateChanged(evt);
            }
        });

        lblGrade2.setText("Total Price");

        txtTotPrice.setText("Â£0.00");
        txtTotPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotPriceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblHeight)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spnHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblLength)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spnLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblWidth)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spnWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(chkRefCor)
                            .addComponent(chkSealTop)
                            .addComponent(chkRefBot)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblGrade)
                                    .addComponent(lblGrade1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(spnGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spnColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnRemove1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemoveAll)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblGrade2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblAmount)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spnAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnOrder))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHeight)
                    .addComponent(spnHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLength)
                    .addComponent(spnLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblWidth)
                    .addComponent(spnWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkSealTop)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkRefBot)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkRefCor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spnColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGrade1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spnGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGrade))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOrder)
                    .addComponent(lblAmount)
                    .addComponent(spnAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemove1)
                    .addComponent(btnRemoveAll)
                    .addComponent(lblGrade2)
                    .addComponent(txtTotPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chkRefBotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkRefBotActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkRefBotActionPerformed

    private void chkRefCorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkRefCorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkRefCorActionPerformed

    private void btnOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderActionPerformed
        DecimalFormat numFormat = new DecimalFormat("#.00");
        Box box = BoxLib.calculateBoxType((int) spnHeight.getValue(), (int) spnLength.getValue(), (int) spnWidth.getValue(), (int) spnGrade.getValue(), (int) spnColor.getValue(), chkRefBot.isSelected(), chkRefCor.isSelected(), chkSealTop.isSelected());
        if (box != null) {
            box.printType();
            //double price = Math.round(box.getTotalPrice() * 100.0) / 100.0;
            double price = (Double.parseDouble(numFormat.format(box.getTotalPrice()))) * (int) spnAmount.getValue();
            
            Object[] row = {ID, new String("" + spnHeight.getValue() + " x " + spnLength.getValue() + " x " + spnWidth.getValue()), chkSealTop.isSelected(), chkRefBot.isSelected(), chkRefCor.isSelected(), spnAmount.getValue(), price};

            //DefaultTableModel model = ()
            DefaultTableModel model = (DefaultTableModel) tblOrders.getModel();

            model.addRow(row);

            totalPrice = Math.round((totalPrice + price) * 100.0) / 100.0;

            txtTotPrice.setText("Â£" + Double.toString(totalPrice));
            
            ID++;

        } else {
            JOptionPane.showMessageDialog(null, BoxLib.getError()); // Will be relaced with method that will alert the user of more useful infomation
        }


    }//GEN-LAST:event_btnOrderActionPerformed

    private void btnRemove1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemove1ActionPerformed
        
        DefaultTableModel model = (DefaultTableModel) tblOrders.getModel();

        int row = tblOrders.getSelectedRow();
                
        totalPrice = totalPrice - (double) tblOrders.getValueAt(row, 6);
        
        txtTotPrice.setText("Â£" + Double.toString(totalPrice));
        
        model.removeRow(row);
        
    }//GEN-LAST:event_btnRemove1ActionPerformed

    private void btnRemoveAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveAllActionPerformed
        
        DefaultTableModel model = (DefaultTableModel) tblOrders.getModel();
        model.setRowCount(0);
        
        totalPrice = 0;
        
        ID = 0;
        
        txtTotPrice.setText("Â£0.00");
        
    }//GEN-LAST:event_btnRemoveAllActionPerformed

    private void chkSealTopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSealTopActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkSealTopActionPerformed

    private void txtTotPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotPriceActionPerformed

    private void spnColorStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnColorStateChanged
        if((int) spnColor.getValue() == 2){
            chkRefBot.setEnabled(true);
            chkRefCor.setEnabled(true);
        }
        else{
            chkRefBot.setEnabled(false);
            chkRefCor.setEnabled(false);
            chkRefBot.setSelected(false);
            chkRefCor.setSelected(false);
        }
    }//GEN-LAST:event_spnColorStateChanged

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        if((int) spnColor.getValue() == 2){
            chkRefBot.setEnabled(true);
            chkRefCor.setEnabled(true);
        }
        else{
            chkRefBot.setEnabled(false);
            chkRefCor.setEnabled(false);
            //chkRefBot.setSelected(false);
            //chkRefCor.setSelected(false);
        }
    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(boxInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(boxInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(boxInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(boxInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new boxInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOrder;
    private javax.swing.JButton btnRemove1;
    private javax.swing.JButton btnRemoveAll;
    private javax.swing.JCheckBox chkRefBot;
    private javax.swing.JCheckBox chkRefCor;
    private javax.swing.JCheckBox chkSealTop;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAmount;
    private javax.swing.JLabel lblGrade;
    private javax.swing.JLabel lblGrade1;
    private javax.swing.JLabel lblGrade2;
    private javax.swing.JLabel lblHeight;
    private javax.swing.JLabel lblLength;
    private javax.swing.JLabel lblWidth;
    private javax.swing.JSpinner spnAmount;
    private javax.swing.JSpinner spnColor;
    private javax.swing.JSpinner spnGrade;
    private javax.swing.JSpinner spnHeight;
    private javax.swing.JSpinner spnLength;
    private javax.swing.JSpinner spnWidth;
    private javax.swing.JTable tblOrders;
    private javax.swing.JTextField txtTotPrice;
    // End of variables declaration//GEN-END:variables
}
